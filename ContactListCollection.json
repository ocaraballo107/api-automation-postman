{
	"info": {
		"_postman_id": "1647f64e-beb2-4594-bf04-f47af6af47e2",
		"name": "Contact List",
		"description": "Contact List of Positive and Negative API Test Cases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15716210"
	},
	"item": [
		{
			"name": "Positive Testing",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"cfranke@gmail.com\",\n    \"password\": \"E-NATIVE-92\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"contactId\", jsonData._id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"birthdate\": \"1977-07-07\",\n    \"email\": \"pprunewhip@fake.com\",\n    \"phone\": \"8005551000\",\n    \"street1\": \"123 Main St.\",\n    \"street2\": \"Apartment Q\",\n    \"city\": \"New York\",\n    \"stateProvince\": \"NY\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contact ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Correct Email is Returned\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"pprunewhip@fake.com\");",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json; charset=utf-8\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Correct First Name is Returned\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(environment.firstName);",
									"});",
									"",
									"pm.test(\"Correct Last Name is Returned\", function () {",
									"    pm.expect(jsonData.lastName).to.eql(environment.lastName);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/contacts/{{contactId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"64d12cecdbc72b0013a8ab41\",\n    \"firstName\": \"Peter\",\n    \"lastName\": \"Pan\",\n    \"birthdate\": \"1977-07-07\",\n    \"email\": \"ppan@fake.com\",\n    \"phone\": \"8005551000\",\n    \"street1\": \"123 Main St.\",\n    \"street2\": \"Apartment Q\",\n    \"city\": \"New York\",\n    \"stateProvince\": \"NY\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\",\n    \"owner\": \"64d11f484f35f3001303ca3c\",\n    \"__v\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/contacts/{{contactId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/contacts/{{contactId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Testing",
			"item": [
				{
					"name": "Set Up Add Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"contactId\", jsonData._id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"birthdate\": \"1977-07-07\",\n    \"email\": \"pprunewhip@fake.com\",\n    \"phone\": \"8005551000\",\n    \"street1\": \"123 Main St.\",\n    \"street2\": \"Apartment Q\",\n    \"city\": \"New York\",\n    \"stateProvince\": \"NY\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Contacts Unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contact ID Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/contacts/64d148204f35f3001303cbf8",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"64d148204f35f3001303cbf8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact Missing Field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Missing First Name Error Msg is Returned\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Path `firstName` is required.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"Prunewhip\",\n    \"birthdate\": \"1977-07-07\",\n    \"email\": \"pprunewhip@fake.com\",\n    \"phone\": \"8005551000\",\n    \"street1\": \"123 Main St.\",\n    \"street2\": \"Apartment Q\",\n    \"city\": \"New York\",\n    \"stateProvince\": \"NY\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact Too Many Characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Prunella\",\n    \"lastName\": {{twentyonecharacaters}},\n    \"birthdate\": \"1977-07-07\",\n    \"email\": \"pprunewhip@fake.com\",\n    \"phone\": \"8005551000\",\n    \"street1\": \"123 Main St.\",\n    \"street2\": \"Apartment Q\",\n    \"city\": \"New York\",\n    \"stateProvince\": \"NY\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contact Invalid Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"64d1442e4f35f3001303cbd6\",\n    \"firstName\": \"Joe\",\n    \"lastName\": \"Johnson\",\n    \"birthdate\": \"1977-07-07\",\n    \"email\": \"ppan@fake\",\n    \"phone\": \"8005551000\",\n    \"street1\": \"123 Main St.\",\n    \"street2\": \"Apartment Q\",\n    \"city\": \"New York\",\n    \"stateProvince\": \"NY\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\",\n    \"owner\": \"64d11f484f35f3001303ca3c\",\n    \"__v\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/contacts/{{contactId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tear Down Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 3000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/contacts/{{contactId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 3000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(3000);",
					"});"
				]
			}
		}
	]
}